 :-dynamic stato/1. :-dynamic ordine_numero/1. :-dynamic ordine/2. :-dynamic pronto/1. :-dynamic contatore_risposte/1. :-dynamic bene_da_servire/2. :-dynamic bene_in_magazzino/2. stato(dorme). ordine_numero(0). contatore_risposte(0). bene_in_magazzino(cibo,2). bene_in_magazzino(acqua,1). bene_in_magazzino(medicina,3). sveglia:-stato(dorme). evi(sveglia):-write('--------------------'),nl,write('Eccomi! Inizio il turno.'),nl,inizio_routine,write('Controllo ordini...'),nl. eve(spesa(Z)):-Z=[Bene,Mittente],write('Ho ricevuto delle richieste mentre dormivo.'),aggiorna_numero_ordine(X,Y),ordine_numero(W),assert(bene_da_servire(W,Bene)),a(message(Mittente,send_message(assegna_ordine_numero(W),Me))). aggiorna_numero_ordine(X,Y):-ordine_numero(X),Y is X+1,retract(ordine_numero(X)),assert(ordine_numero(Y)). inizio_routine:-a(message(all,send_message(richiesta_id,Me))). eve(risposta_id(X)):- \+ordine(A,Mittente),X=[Y,Z],aggiorna_contatore(Q0,Q1),(Y>0->assert(ordine(Y,Z));write('')),(Q1==2->assert(pronto(servizio));write('')). eve(risposta_id(X)):-ordine(A,Mittente),X=[Y,Z],aggiorna_contatore(Q0,Q1),(Y>A->write('');Y>0->retract(ordine(A,Mittente)),assert(ordine(Y,Z));write('')),(Q1==2->assert(pronto(servizio));write('')). aggiorna_contatore(Q0,Q1):-contatore_risposte(Q0),Q1 is Q0+1,retract(contatore_risposte(Q0)),assert(contatore_risposte(Q1)). servizio_routine:-pronto(servizio). evi(servizio_routine):- \+ordine(X,Y),write('Non ho ricevuto ordini, chiudo il turno.'),nl,write('--------------------'),nl,retract(contatore_risposte(2)),assert(contatore_risposte(0)),retract(pronto(servizio)). evi(servizio_routine):-ordine(X,Y),bene_da_servire(X,Z),bene_in_magazzino(Z,W),(W>0->write('Servo l ordine di: '),write(Y),write(' con id: '),write(X),write('.'),nl,write('Fatto!'),nl,write('Chiudo il turno.'),nl,write('--------------------'),aggiorna_bene_in_magazzino(Z,Q0,Q1);write('Bene momentaneamente non disponibile, provi a ripassare presto. Chiudo il turno.'),nl,write('--------------------'),nl),retract(contatore_risposte(2)),assert(contatore_risposte(0)),retract(ordine(X,Y)),rispondi_consumatore(W,X,Y),retract(pronto(servizio)). rispondi_consumatore(W,X,Y):-W>0,a(message(Y,send_message(rimuovi_ordine(X),Me))). rispondi_consumatore(W,X,Y):-W==0,a(message(Y,send_message(ritenta_ordine,Me))). aggiorna_bene_in_magazzino(Z,Q0,Q1):-bene_in_magazzino(Z,Q0),Q1 is Q0-1,(Q1==0->nl,write('In magazzino non ci sono piu scorte di '),write(Z),write(', provvedo a richiedere rifornimenti al produttore.'),nl,write('--------------------'),acquista_merci_routine(Z);retract(bene_in_magazzino(Z,Q0)),assert(bene_in_magazzino(Z,Q1))). acquista_merci_routine(Z):-a(message(produttore,send_message(richiesta_merce(Z),Me))). eve(arrivo_merci(X)):-write('***********************************'),nl,write('Sono arrivati rifornimenti di '),write(X),write('.'),nl,write('***********************************'),nl,retract(bene_in_magazzino(X,Y)),assert(bene_in_magazzino(X,3)). :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_158875,Ontology,_158879),_158869),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_158913)),a(message(Ag,propose(A,[_158913],AgI))),retractall(ext_agent(Ag,_158951,Ontology,_158955)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_158749,Ontology,_158753),_158743),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_158819,Ontology,_158823)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_158637,Ontology,_158641),_158631),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_158693,Ontology,_158697)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_158201),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_158235),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_158017). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_157865),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_157813),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_157689,_157691)),clause(agente(_157711,_157713,_157715,S),_157707),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_157483,_157485,_157487,S),_157479),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_157583,[]),repeat,read(_157583,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_157583). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-true. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(learned(_326825)):-cd(learned(_326825)),assert(do_action(learned(_326825),program)).
cd(learned(_326825)):-true.
a(message(_326833,confirm(learn(_326845),_326841))):-cd(message(_326833,confirm(learn(_326845),_326841))),assert(do_action(message(_326833,confirm(learn(_326845),_326841)),program)).
cd(message(_326833,confirm(learn(_326845),_326841))):-true.
a(message(all,send_message(richiesta_id,_326861))):-cd(message(all,send_message(richiesta_id,_326861))),assert(do_action(message(all,send_message(richiesta_id,_326861)),program)).
cd(message(all,send_message(richiesta_id,_326861))):-true.
a(message(produttore,send_message(richiesta_merce(_326881),_326861))):-cd(message(produttore,send_message(richiesta_merce(_326881),_326861))),assert(do_action(message(produttore,send_message(richiesta_merce(_326881),_326861)),program)).
cd(message(produttore,send_message(richiesta_merce(_326881),_326861))):-true.
a(message(_326889,reply(received(_326901),_326897))):-cd(message(_326889,reply(received(_326901),_326897))),assert(do_action(message(_326889,reply(received(_326901),_326897)),program)).
cd(message(_326889,reply(received(_326901),_326897))):-true.
a(message(_326889,accept_proposal(_326897,[],_326919))):-cd(message(_326889,accept_proposal(_326897,[],_326919))),assert(do_action(message(_326889,accept_proposal(_326897,[],_326919)),program)).
cd(message(_326889,accept_proposal(_326897,[],_326919))):-true.
a(message(_326889,failure(_326897,motivation(false_conditions),_326937))):-cd(message(_326889,failure(_326897,motivation(false_conditions),_326937))),assert(do_action(message(_326889,failure(_326897,motivation(false_conditions),_326937)),program)).
cd(message(_326889,failure(_326897,motivation(false_conditions),_326937))):-true.
a(message(_326889,inform(agree(_326901),values(no),_326897))):-cd(message(_326889,inform(agree(_326901),values(no),_326897))),assert(do_action(message(_326889,inform(agree(_326901),values(no),_326897)),program)).
cd(message(_326889,inform(agree(_326901),values(no),_326897))):-true.
a(message(_326889,inform(agree(_326901),values(yes),_326897))):-cd(message(_326889,inform(agree(_326901),values(yes),_326897))),assert(do_action(message(_326889,inform(agree(_326901),values(yes),_326897)),program)).
cd(message(_326889,inform(agree(_326901),values(yes),_326897))):-true.
a(message(_326889,inform(query_ref(_326901,_327017),motivation(no_values),_326897))):-cd(message(_326889,inform(query_ref(_326901,_327017),motivation(no_values),_326897))),assert(do_action(message(_326889,inform(query_ref(_326901,_327017),motivation(no_values),_326897)),program)).
cd(message(_326889,inform(query_ref(_326901,_327017),motivation(no_values),_326897))):-true.
a(message(_326889,inform(query_ref(_326901,_327017),values(_327049),_326897))):-cd(message(_326889,inform(query_ref(_326901,_327017),values(_327049),_326897))),assert(do_action(message(_326889,inform(query_ref(_326901,_327017),values(_327049),_326897)),program)).
cd(message(_326889,inform(query_ref(_326901,_327017),values(_327049),_326897))):-true.
a(message(_326889,propose(_326897,[_327069],_326919))):-cd(message(_326889,propose(_326897,[_327069],_326919))),assert(do_action(message(_326889,propose(_326897,[_327069],_326919)),program)).
cd(message(_326889,propose(_326897,[_327069],_326919))):-true.
a(message(_326889,refuse(agree(variable),motivation(refused_variables),_326897))):-cd(message(_326889,refuse(agree(variable),motivation(refused_variables),_326897))),assert(do_action(message(_326889,refuse(agree(variable),motivation(refused_variables),_326897)),program)).
cd(message(_326889,refuse(agree(variable),motivation(refused_variables),_326897))):-true.
a(message(_326889,refuse(query_ref(variable),motivation(refused_variables),_326897))):-cd(message(_326889,refuse(query_ref(variable),motivation(refused_variables),_326897))),assert(do_action(message(_326889,refuse(query_ref(variable),motivation(refused_variables),_326897)),program)).
cd(message(_326889,refuse(query_ref(variable),motivation(refused_variables),_326897))):-true.
a(message(_326889,reject_proposal(_326897,[],_326919))):-cd(message(_326889,reject_proposal(_326897,[],_326919))),assert(do_action(message(_326889,reject_proposal(_326897,[],_326919)),program)).
cd(message(_326889,reject_proposal(_326897,[],_326919))):-true.
a(message(_327149,inform(_327155,motivation(refused_message),_326937))):-cd(message(_327149,inform(_327155,motivation(refused_message),_326937))),assert(do_action(message(_327149,inform(_327155,motivation(refused_message),_326937)),program)).
cd(message(_327149,inform(_327155,motivation(refused_message),_326937))):-true.
a(message(_327171,send_message(assegna_ordine_numero(_327183),_326861))):-cd(message(_327171,send_message(assegna_ordine_numero(_327183),_326861))),assert(do_action(message(_327171,send_message(assegna_ordine_numero(_327183),_326861)),program)).
cd(message(_327171,send_message(assegna_ordine_numero(_327183),_326861))):-true.
a(message(_327191,send_message(sent_rmi(_326901,_327205,_327207),_326889))):-cd(message(_327191,send_message(sent_rmi(_326901,_327205,_327207),_326889))),assert(do_action(message(_327191,send_message(sent_rmi(_326901,_327205,_327207),_326889)),program)).
cd(message(_327191,send_message(sent_rmi(_326901,_327205,_327207),_326889))):-true.
a(message(_327215,send_message(ritenta_ordine,_326861))):-cd(message(_327215,send_message(ritenta_ordine,_326861))),assert(do_action(message(_327215,send_message(ritenta_ordine,_326861)),program)).
cd(message(_327215,send_message(ritenta_ordine,_326861))):-true.
a(message(_327215,send_message(rimuovi_ordine(_326901),_326861))):-cd(message(_327215,send_message(rimuovi_ordine(_326901),_326861))),assert(do_action(message(_327215,send_message(rimuovi_ordine(_326901),_326861)),program)).
cd(message(_327215,send_message(rimuovi_ordine(_326901),_326861))):-true.
eve_cond(arrivo_merci(_351821)):-cd(arrivo_merci(_351821)),eve(arrivo_merci(_351821)).
cd(arrivo_merci(_351821)):-true.
eve_cond(risposta_id(_351821)):-cd(risposta_id(_351821)),eve(risposta_id(_351821)).
cd(risposta_id(_351821)):-true.
eve_cond(spesa(_351837)):-cd(spesa(_351837)),eve(spesa(_351837)).
cd(spesa(_351837)):-true.